<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tagIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 17</value>
  </metadata>
  <data name="tagIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        EgAAAk1TRnQBSQFMAgEBBwEAAUABAAFAAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAMLcwADD/MAADui0+BgAD8QadA6QeADD/MAADvQGcAZkBmAGcAZkBmAGc
        AZkBmAGcAZkBmAGcAZkBmAGcAZkBmAGcAZkBmAGcAZkBmAGcAZkBmAIKAQkDAQMAAU0BTAFLAZwBmQGY
        AZwBmQGYBgADxAOLA58DwwOBGwAw/zAAA8EBpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGi
        AaABpQGiAaABpQGiAaABpQGiAaABNwE1ATQBSgFIAUcBFQITAwABpQGiAaABpQGiAaADAAGbAZwBnQGf
        AqAGAAP7A8EDgxgAMP8wAAPFAa0BqwGpAQABPwEmAQABgAFMAQABgAFMAQABgAFMDAABXQFZAVgBfAF6
        AXgBKwEqASkDAAGtAasBqQGtAasBqQMAAskBywOvCQAD+wPCGAAw/zAAA8gBtgG0AbIBAAE/ASYBAAH/
        AZoBAAH/AZoBAAH/AZoMAAIIAdkBOgE4ATYBEgIRAbYBtAGyAbYBtAGyAbYBtAGyBgADywGqAasBrAMA
        A/wDjgGvArAD7hUAMP8wAAPLAb4BvAG7BAAB/wGaAQAB/wGaAQAB/wGaCwABzwYAAb4BvAG7Ab4BvAG7
        Ab4BvAG7Ab4BvAG7CQAD1gGvArEDAAPvA5sYADD/MAADzgHHAcUBxAG6AbkBuAEAAf8BmgEAAf8BmgEA
        Af8BmgEAAf8BmgUAAc8JAAHHAcUBxAHHAcUBxAHHAcUBxAHHAcUBxAwAAsQBxQPTAsUBxgPvAaACoRUA
        MP8wAAPSAc8BzgHNAc8BzgHNAQABHwESATUB/wGvATEB/wGuASwB/wGsASgBQwH0AyMDHwEbAhoDAAHP
        Ac4BzQHPAc4BzQHPAc4BzQHPAc4BzRgAA+8BpgGnAagBiQKKA68DjAkAMP8wAAPVAdcB1gHVAdcB1gHV
        AcoByQHIAdgB/wHvAccB/wHoAbUB/wHhAaMB/wHbAZIB/wHTAYABpwGWAW4BbAFrAwAB1wHWAdUB1wHW
        AdUB1wHWAdUB1wHWAdUYAAOwA/sBrAKvA+UDwwOCBgAw/zAAA9gB4AHfAd4B4AHfAd4B4AHfAd4DUwHH
        Af8B6AG1Af8B4QGjAf8B2wGSAf8B0wGAAf8BzAFuAf8BxQMAAeAB3wHeAeAB3wHeAeAB3wHeAeAB3wHe
        GAADsAGQApEBzgHRAdMDAAP7A8MDhwMAMP8wAAPbAugB5wLoAecC6AHnAugB5wKDAYIBqQHvAdMBWgGP
        AXoBkgH/AdMBgAH/AcwBbgH/AcUDAALoAecBAAH/AZoBAAHcAYUC6AHnGAABoAGiAaMBqgGrAawJAAP4
        A74DADD/MAAD3wHxAvAB8QLwAfEC8AHxAvAB8QLwAfEC8AMAAZIB/wHTAYAB/wHMAW4B/wHFAwAB8QLw
        AQAB3AGFAQkBagFDAfEC8BsAA84BqwKsCQADwwMAMP8wAAPjGPkDjAYADPkeAAPRAbABsQGzAdIC0wG0
        AbUBuAG6ArwDADD/MAAw5iEAAr4BvwPMAbwCvQYAMP8wADDpMAAw/zAACbcDkgGVAZIBkAGVAZIBkAGV
        AZIBkAGVAZIBkAGVAZIBkAGVAZIBkAGVAZIBkAGVAZIBkAGMAYkBhwOLBrcwAAa3AroBuQK6AbkCugG5
        AroBuQK6AbkCugG5AroBuQK6AbkCugG5AroBuQK6AbkCugG5AYIBgQF+A6Awtwm6AU0BTAFLAgABIQIA
        AS0CAAEtAgABLQIAAS0CAAEtAgABLQIAAS0BdAFyAXEDfQa6AwAB8QH1AfcB6wHyAfQB6wHyAfQB6wHy
        AfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHyAfQB6wHy
        AfQD/ga6A70hAAO9A6IDugO2DKIDpAa6A6MPogOrCb0BUQJPAgABLQESAQAB1wEXAQAB7AEaAQAB+QEa
        AQAB/AEZAQAB9QEVAQAB5QEQAQABzgFRAk8Dfwa9AXMBygHgARsByAHzARsByAHzARsByAHzARsByAHz
        ARsByAHzARsByAHzARsByAHzARsByAHzARsByAHzARsByAHzARsByAHzARsByAHzARsByAHzARsByAHz
        ARsByAHzBr0BwQHCAcAJAAFIAf8BNAFIAf8BNAFIAf8BNAENAS8BCQwAAsEBwAOlA70DqAF2AiYBeQIn
        AXgCJwFzAiQBbQIiA7EDvQGBATMBOwGLAToBRAGIATgBQAGCATQBPAF9ATEBOQF3AS4BNQF1AnMJwQFU
        AVMBUgIAAS0BGAEAAfABGwEAAf8B8QHvAf8BGwEABP8BGwEAAf8BFQEAAeYBVAFTAVIDgQbBAR0ByQH0
        AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0
        AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0AR0ByQH0BsECxgHFAiMBIgMAAUgB/wE0AUgB/wE0AUgB/wE0
        AUgB/wE0ASgBjwEdARoBXwETCQACxgHFA6gGwQF4AigBiwEzATYBigExATQBhQEvATABdwEoASoDkgPB
        AWICHwH/AcgB3gH/AcMB2AH/AbgBzgH6AbABxgHyAakBvgFcAh0JxQFYAVcBVgIAAToBGwEAAf8BGwEA
        Af8BGwEAAf8BGwEABP8BGwEAAf8BGQEAAfcBWAFXAVYDgwbFAR4BygH1AR4BygH1AR4BygH1AR4BygH1
        AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1AR4BygH1
        AR4BygH1AR4BygH1BsUBywHMAcsBYAFeAV0DAAFIAf8BNAkAAREBPwEMAUgB/wE0CQABywHMAcsDrAbF
        AXUCNQGiAUIBSgGjAUIBSQGcAT4BRQGTATgBQQFtAmIDxAGNAocBYgIfAWECHwFhAh8BYAIeAV8CHgFd
        Ah4JyAFcAVsBWgIAAUkBGwEAAf8BGwEAB/8BqgGfAf8BGwEAAf8BGwEAAf4BXAFbAVoDhQbIASABzAH2
        ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2
        ASABzAH2ASABzAH2ASABzAH2ASABzAH2ASABzAH2BsgB0QHSAdEBYQFfAV4DCwFIAf8BNAERAT8BDAkA
        AUgB/wE0CQAB0QHSAdADrgnIAdMBgAGOAbQBTwFcAbQBTAFaAaYBRgFTAW8CJAO0FcgJywFfAl4CAAFY
        ARsBAAH/ARsBAAH/ARsBAAH/ARsBAAH/ARsBAAH/ARsBAAH/ARsBAAH9AV8CXgOGBssBIgHNAfcBIgHN
        AfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHN
        AfcBIgHNAfcBIgHNAfcBIgHNAfcBIgHNAfcGywHYAdcB2AFvAW4BbQFiAWEBYAFIAf8BNAE2Ab8BJwkA
        AUgB/wE0CQAC2AHXA7EJywFyAiQBxgFcAW0BwgFaAWsBuAFTAWMBrAFMAV0DkBXLCc4BYwJiAQABRQEg
        ARoB/QEAARsB/wEAARsB/wEAARsB/wEAARsB/wEAARsB/wEAARgB8QEAAWMCYgOIBs4BJAHOAfgBJAHO
        AfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHO
        AfgBJAHOAfgBJAHOAfgBJAHOAfgBJAHOAfgGzgPeAYABfgF9AXEBcAFvAVQBWgFSAUgB/wE0AUgB/wE0
        AUgB/wE0AUgB/wE0AUgB/wE0CQAD3gOzCc4BgAJmAf0BtwHGAc8BYgF4AcQBXQFyAbkBVwFqAWUCTAPM
        Es4J0gJmAWUBAAFwAQABFgHnAQABGwH+AQABGwH/BAABGwH/AQABGQH4AQABEwHdAQACZgFlA4oG0gEu
        Ac8B9wEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEm
        Ac8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QEmAc8B+QbSA+QBjwGOAY0BggKAAYYBsQF+AVEB/wE+
        CQABSAH/ATQBGgFfARMGAAHlAuQDtwzSAeABnAGpAfoBugHKAc0BZQF9AcQBYAF2AXUBLQEyA7US0gnV
        AWoCaQEAAXQBAAEPAcwBAAEUAeABAAEXAe0EAAEWAekBAAETAdoBAAENAcMBAAFqAmkDjAbVAXABuAHn
        AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6
        AScB0AH6AScB0AH6AScB0AH6AScB0AH6AScB0AH6BtUC6wHqAZ8BngGdAZECkAGEAoIBnQH/AZEJAAFI
        Af8BNAE2Ab8BJwYAAuoB6wO5A9UBZAI/AWMCOwFkAjsBYgIfAf8BxwHXAfQBtgHGAcwBZwGDAcQBYwF8
        AV4COQFcAjoBXAI6AVwCOgPCBtUJ2AFuAm0BAAF0AQABCQGuAQABDAG/AQABDwHJBAABDgHGAQABCwG5
        AQABBQGnAQABbgJtA44G2AF1Ab0B6wEfAZsB6gEfAZsB6gEfAZsB6gEfAZsB6gEfAZsB6gEfAZsB6gEh
        AacB7gEpAdEB+wEpAdEB+wEpAdEB+wEpAdEB+wEpAdEB+wEpAdEB+wEpAdEB+wEpAdEB+wbYA/ABrgKt
        AaEBoAGfAZMBkgGRAagB/wGdAXcBdgF1BgABNgG/AScBSAH/ATQGAAHxAvADvAPYAX4BQwFFAf8B6QH0
        Af8B4wHvAf8B3QHqAf8B1AHiAfoByAHWAfQBvgHNAdMBbQGKAc0BagGHAcsBaQGEAckBaAGDAYIBOAFC
        A5sG2AnbAnEBcAEAAW4BAAEBAY4BAAEEAZwBAAEGAaQBAAEHAacBAAEGAaIBAAEDAZcCAAGNAQACcQFw
        A48G2wGGAccB7wEmAaMB8gEmAaMB8gEmAaMB8gEmAaMB8gEmAaMB8gEmAaMB8gEmAaMB8gEqAcoB+gEr
        AdIB/AErAdIB/AErAdIB/AErAdIB/AErAdIB/AErAdIB/AErAdIB/AbbAfUB9gH1Ar0BvAGwAq8CogGh
        AbMB/wKqAf8BnwGgAf8BlAFcAf8BSgE2Ab8BJwE6Ac8BKgYAA/UDvgPbAV8CHgH/AfkC/wHzAfwB/wHp
        AfUB/wHiAe8B/wHWAeMB+wHMAdsB9QHCAdIB7wG6AcsB3AF4AZYB2QFzAZIB2AFyAZABaAJZA9oD2wnf
        AXUCdAEAAWUBAAGAAeECgAHhAoAB4QKAAeECgAHhAoAB4QGAAWcB0gFnAXUCdAORBt8DAAFHAbIB9gEt
        AaoB+QEtAaoB+QEtAaoB+QEtAaoB+QEtAaoB+QEtAaoB+QEtAaoB+QEtAdQB/QEtAdQB/QEtAdQB/QEt
        AdQB/QEtAdQB/QEtAdQB/QEtAdQB/QbfAvkB+gHNAswBvwK+AbICsQGkAqMBrwHsAacBqwH/AaABoQH/
        AZUBkwH/AYUJAAH6AfkB+gPCBt8H/wH3Av8B7QH4Af8B5AHvAf8B2QHmAfwB0gHgAfgByQHZAfYBwwHT
        AfQBvQHPAfIBtwHKAVcCHAPDA98J4wN4AQABWQEAARIBgwISAYMCEgGDAhIBgwISAYMCEgGDAhIBgwES
        A3gDlQbjHgABeAHdAfYBLgHVAf4BLgHVAf4BLgHVAf4BLgHVAf4BVwHaAfkG4wP9A9wDzgHBAsABtAKz
        AaYCpQGZAZgBlwGLAYoBiQF9AnsBbwFuAW0BPgI8AwAD/QPFMOMJ5gN5G/oDwwbmMAAG5if+A88w5jDp
        MABg6QFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AwAC/wYAAcMB/wYAAcEB/wYA
        AZgB/wYAAZwB/wYAAcgBfwYAAeQB/wYAAfABfwYAAf8BBwYAAf8BAwYAAf8BEQYAAf8BOQYAAf8BnQYA
        Af8BwQYAAf8B4wYAAv8GAAL/BgABgFcAAYAHAAH/AcAGAAL/BgAC/wQACw==
</value>
  </data>
  <metadata name="cMenuStripSelectedObject.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cMenuStripSelectedSuperTag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>341, 17</value>
  </metadata>
  <metadata name="cMenuStripMultipleObjects.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>567, 17</value>
  </metadata>
  <metadata name="menuStripMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>780, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>67</value>
  </metadata>
</root>