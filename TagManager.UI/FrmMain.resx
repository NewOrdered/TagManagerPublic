<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tagIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>226, 17</value>
  </metadata>
  <data name="tagIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAu
        EgAAAk1TRnQBSQFMAgEBBgEAASABAAEgAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAMLeQAAO6LT4GAAPxBp0DpH4AA70BnAGZAZgBnAGZAZgBnAGZAZgBnAGZ
        AZgBnAGZAZgBnAGZAZgBnAGZAZgBnAGZAZgBnAGZAZgCCgEJAwEDAAFNAUwBSwGcAZkBmAGcAZkBmAYA
        A8QDiwOfA8MDgXsAA8EBpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGiAaABpQGi
        AaABpQGiAaABNwE1ATQBSgFIAUcBFQITAwABpQGiAaABpQGiAaADAAGbAZwBnQGfAqAGAAP7A8EDg3gA
        A8UBrQGrAakBAAE/ASYBAAGAAUwBAAGAAUwBAAGAAUwMAAFdAVkBWAF8AXoBeAErASoBKQMAAa0BqwGp
        Aa0BqwGpAwACyQHLA68JAAP7A8J4AAPIAbYBtAGyAQABPwEmAQAB/wGaAQAB/wGaAQAB/wGaDAACCAHZ
        AToBOAE2ARICEQG2AbQBsgG2AbQBsgG2AbQBsgYAA8sBqgGrAawDAAP8A44BrwKwA+51AAPLAb4BvAG7
        BAAB/wGaAQAB/wGaAQAB/wGaCwABzwYAAb4BvAG7Ab4BvAG7Ab4BvAG7Ab4BvAG7CQAD1gGvArEDAAPv
        A5t4AAPOAccBxQHEAboBuQG4AQAB/wGaAQAB/wGaAQAB/wGaAQAB/wGaBQABzwkAAccBxQHEAccBxQHE
        AccBxQHEAccBxQHEDAACxAHFA9MCxQHGA+8BoAKhdQAD0gHPAc4BzQHPAc4BzQEAAR8BEgE1Af8BrwEx
        Af8BrgEsAf8BrAEoAUMB9AMjAx8BGwIaAwABzwHOAc0BzwHOAc0BzwHOAc0BzwHOAc0YAAPvAaYBpwGo
        AYkCigOvA4xpAAPVAdcB1gHVAdcB1gHVAcoByQHIAdgB/wHvAccB/wHoAbUB/wHhAaMB/wHbAZIB/wHT
        AYABpwGWAW4BbAFrAwAB1wHWAdUB1wHWAdUB1wHWAdUB1wHWAdUYAAOwA/sBrAKvA+UDwwOCZgAD2AHg
        Ad8B3gHgAd8B3gHgAd8B3gNTAccB/wHoAbUB/wHhAaMB/wHbAZIB/wHTAYAB/wHMAW4B/wHFAwAB4AHf
        Ad4B4AHfAd4B4AHfAd4B4AHfAd4YAAOwAZACkQHOAdEB0wMAA/sDwwOHYwAD2wLoAecC6AHnAugB5wLo
        AecCgwGCAakB7wHTAVoBjwF6AZIB/wHTAYAB/wHMAW4B/wHFAwAC6AHnAQAB/wGaAQAB3AGFAugB5xgA
        AaABogGjAaoBqwGsCQAD+AO+YwAD3wHxAvAB8QLwAfEC8AHxAvAB8QLwAfEC8AMAAZIB/wHTAYAB/wHM
        AW4B/wHFAwAB8QLwAQAB3AGFAQkBagFDAfEC8BsAA84BqwKsCQADw2MAA+MY+QOMBgAM+R4AA9EBsAGx
        AbMB0gLTAbQBtQG4AboCvGMAMOYhAAK+Ab8DzAG8Ar1mADDpkAAJtwOSAZUBkgGQAZUBkgGQAZUBkgGQ
        AZUBkgGQAZUBkgGQAZUBkgGQAZUBkgGQAZUBkgGQAYwBiQGHA4sGtzAABrcCugG5AroBuQK6AbkCugG5
        AroBuQK6AbkCugG5AroBuQK6AbkCugG5AroBuQK6AbkBggGBAX4DoDC3CboBTQFMAUsCAAEhAgABLQIA
        AS0CAAEtAgABLQIAAS0CAAEtAgABLQF0AXIBcQN9BroDAAHxAfUB9wHrAfIB9AHrAfIB9AHrAfIB9AHr
        AfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AHrAfIB9AP+
        BroDvSEAA70DogO6A7YMogOkBroDow+iA6sJvQFRAk8CAAEtARIBAAHXARcBAAHsARoBAAH5ARoBAAH8
        ARkBAAH1ARUBAAHlARABAAHOAVECTwN/Br0BcwHKAeABGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHI
        AfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHIAfMBGwHI
        AfMGvQHBAcIBwAkAAUgB/wE0AUgB/wE0AUgB/wE0AQ0BLwEJDAACwQHAA6UDvQOoAXYCJgF5AicBeAIn
        AXMCJAFtAiIDsQO9AYEBMwE7AYsBOgFEAYgBOAFAAYIBNAE8AX0BMQE5AXcBLgE1AXUCcwnBAVQBUwFS
        AgABLQEYAQAB8AEbAQAB/wHxAe8B/wEbAQAE/wEbAQAB/wEVAQAB5gFUAVMBUgOBBsEBHQHJAfQBHQHJ
        AfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJ
        AfQBHQHJAfQBHQHJAfQBHQHJAfQBHQHJAfQGwQLGAcUCIwEiAwABSAH/ATQBSAH/ATQBSAH/ATQBSAH/
        ATQBKAGPAR0BGgFfARMJAALGAcUDqAbBAXgCKAGLATMBNgGKATEBNAGFAS8BMAF3ASgBKgOSA8EBYgIf
        Af8ByAHeAf8BwwHYAf8BuAHOAfoBsAHGAfIBqQG+AVwCHQnFAVgBVwFWAgABOgEbAQAB/wEbAQAB/wEb
        AQAB/wEbAQAE/wEbAQAB/wEZAQAB9wFYAVcBVgODBsUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHK
        AfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHKAfUBHgHK
        AfUBHgHKAfUGxQHLAcwBywFgAV4BXQMAAUgB/wE0CQABEQE/AQwBSAH/ATQJAAHLAcwBywOsBsUBdQI1
        AaIBQgFKAaMBQgFJAZwBPgFFAZMBOAFBAW0CYgPEAY0ChwFiAh8BYQIfAWECHwFgAh4BXwIeAV0CHgnI
        AVwBWwFaAgABSQEbAQAB/wEbAQAH/wGqAZ8B/wEbAQAB/wEbAQAB/gFcAVsBWgOFBsgBIAHMAfYBIAHM
        AfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHM
        AfYBIAHMAfYBIAHMAfYBIAHMAfYBIAHMAfYGyAHRAdIB0QFhAV8BXgMLAUgB/wE0AREBPwEMCQABSAH/
        ATQJAAHRAdIB0AOuCcgB0wGAAY4BtAFPAVwBtAFMAVoBpgFGAVMBbwIkA7QVyAnLAV8CXgIAAVgBGwEA
        Af8BGwEAAf8BGwEAAf8BGwEAAf8BGwEAAf8BGwEAAf8BGwEAAf0BXwJeA4YGywEiAc0B9wEiAc0B9wEi
        Ac0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEiAc0B9wEi
        Ac0B9wEiAc0B9wEiAc0B9wEiAc0B9wbLAdgB1wHYAW8BbgFtAWIBYQFgAUgB/wE0ATYBvwEnCQABSAH/
        ATQJAALYAdcDsQnLAXICJAHGAVwBbQHCAVoBawG4AVMBYwGsAUwBXQOQFcsJzgFjAmIBAAFFASABGgH9
        AQABGwH/AQABGwH/AQABGwH/AQABGwH/AQABGwH/AQABGAHxAQABYwJiA4gGzgEkAc4B+AEkAc4B+AEk
        Ac4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEkAc4B+AEk
        Ac4B+AEkAc4B+AEkAc4B+AEkAc4B+AbOA94BgAF+AX0BcQFwAW8BVAFaAVIBSAH/ATQBSAH/ATQBSAH/
        ATQBSAH/ATQBSAH/ATQJAAPeA7MJzgGAAmYB/QG3AcYBzwFiAXgBxAFdAXIBuQFXAWoBZQJMA8wSzgnS
        AmYBZQEAAXABAAEWAecBAAEbAf4BAAEbAf8EAAEbAf8BAAEZAfgBAAETAd0BAAJmAWUDigbSAS4BzwH3
        ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5
        ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5ASYBzwH5BtID5AGPAY4BjQGCAoABhgGxAX4BUQH/AT4JAAFI
        Af8BNAEaAV8BEwYAAeUC5AO3DNIB4AGcAakB+gG6AcoBzQFlAX0BxAFgAXYBdQEtATIDtRLSCdUBagJp
        AQABdAEAAQ8BzAEAARQB4AEAARcB7QQAARYB6QEAARMB2gEAAQ0BwwEAAWoCaQOMBtUBcAG4AecBJwHQ
        AfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQ
        AfoBJwHQAfoBJwHQAfoBJwHQAfoBJwHQAfoG1QLrAeoBnwGeAZ0BkQKQAYQCggGdAf8BkQkAAUgB/wE0
        ATYBvwEnBgAC6gHrA7kD1QFkAj8BYwI7AWQCOwFiAh8B/wHHAdcB9AG2AcYBzAFnAYMBxAFjAXwBXgI5
        AVwCOgFcAjoBXAI6A8IG1QnYAW4CbQEAAXQBAAEJAa4BAAEMAb8BAAEPAckEAAEOAcYBAAELAbkBAAEF
        AacBAAFuAm0DjgbYAXUBvQHrAR8BmwHqAR8BmwHqAR8BmwHqAR8BmwHqAR8BmwHqAR8BmwHqASEBpwHu
        ASkB0QH7ASkB0QH7ASkB0QH7ASkB0QH7ASkB0QH7ASkB0QH7ASkB0QH7ASkB0QH7BtgD8AGuAq0BoQGg
        AZ8BkwGSAZEBqAH/AZ0BdwF2AXUGAAE2Ab8BJwFIAf8BNAYAAfEC8AO8A9gBfgFDAUUB/wHpAfQB/wHj
        Ae8B/wHdAeoB/wHUAeIB+gHIAdYB9AG+Ac0B0wFtAYoBzQFqAYcBywFpAYQByQFoAYMBggE4AUIDmwbY
        CdsCcQFwAQABbgEAAQEBjgEAAQQBnAEAAQYBpAEAAQcBpwEAAQYBogEAAQMBlwIAAY0BAAJxAXADjwbb
        AYYBxwHvASYBowHyASYBowHyASYBowHyASYBowHyASYBowHyASYBowHyASYBowHyASoBygH6ASsB0gH8
        ASsB0gH8ASsB0gH8ASsB0gH8ASsB0gH8ASsB0gH8ASsB0gH8BtsB9QH2AfUCvQG8AbACrwKiAaEBswH/
        AqoB/wGfAaAB/wGUAVwB/wFKATYBvwEnAToBzwEqBgAD9QO+A9sBXwIeAf8B+QL/AfMB/AH/AekB9QH/
        AeIB7wH/AdYB4wH7AcwB2wH1AcIB0gHvAboBywHcAXgBlgHZAXMBkgHYAXIBkAFoAlkD2gPbCd8BdQJ0
        AQABZQEAAYAB4QKAAeECgAHhAoAB4QKAAeECgAHhAYABZwHSAWcBdQJ0A5EG3wMAAUcBsgH2AS0BqgH5
        AS0BqgH5AS0BqgH5AS0BqgH5AS0BqgH5AS0BqgH5AS0BqgH5AS0B1AH9AS0B1AH9AS0B1AH9AS0B1AH9
        AS0B1AH9AS0B1AH9AS0B1AH9Bt8C+QH6Ac0CzAG/Ar4BsgKxAaQCowGvAewBpwGrAf8BoAGhAf8BlQGT
        Af8BhQkAAfoB+QH6A8IG3wf/AfcC/wHtAfgB/wHkAe8B/wHZAeYB/AHSAeAB+AHJAdkB9gHDAdMB9AG9
        Ac8B8gG3AcoBVwIcA8MD3wnjA3gBAAFZAQABEgGDAhIBgwISAYMCEgGDAhIBgwISAYMCEgGDARIDeAOV
        BuMeAAF4Ad0B9gEuAdUB/gEuAdUB/gEuAdUB/gEuAdUB/gFXAdoB+QbjA/0D3APOAcECwAG0ArMBpgKl
        AZkBmAGXAYsBigGJAX0CewFvAW4BbQE+AjwDAAP9A8Uw4wnmA3kb+gPDBuYwAAbmJ/4DzzDmMOkwAGDp
        AUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8DAAL/BgABwwH/BgABwQH/BgABmAH/
        BgABnAH/BgAByAF/BgAB5AH/BgAB8AF/BgAB/wEHBgAB/wEDBgAB/wERBgAB/wE5BgAB/wGdBgAB/wHB
        BgAB/wHjBgAC/wYAAv8GAAGAVwABgAcAAf8BwAYAAv8GAAL/BAAL
</value>
  </data>
  <metadata name="cMenuStripSelectedObject.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cMenuStripSelectedSuperTag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>341, 17</value>
  </metadata>
  <metadata name="cMenuStripMultipleObjects.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>567, 17</value>
  </metadata>
  <metadata name="menuStripMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>780, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>67</value>
  </metadata>
</root>